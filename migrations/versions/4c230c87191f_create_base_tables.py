"""Create base tables

Revision ID: 4c230c87191f
Revises: 
Create Date: 2025-08-27 16:47:01.688331

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4c230c87191f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(length=120), nullable=True),
    sa.Column('image_link', sa.String(length=500), nullable=True),
    sa.Column('seeking_venue', sa.Boolean(), nullable=False),
    sa.Column('seeking_description', sa.String(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('artists', schema=None) as batch_op:
        batch_op.create_index('ix_artist_name', ['name'], unique=False)

    op.create_table('genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('genre_name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('genre_name')
    )
    op.create_table('link_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_name')
    )
    op.create_table('postal_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=False),
    sa.Column('state', sa.String(length=120), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=False),
    sa.CheckConstraint('char_length(country) = 2', name='chk_country_iso2'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country', 'code', name='uq_country_code')
    )
    op.create_table('genres_artists',
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('artist_id', 'genre_id')
    )
    op.create_table('links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('link_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['link_type_id'], ['link_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('postal_code_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['postal_code_id'], ['postal_codes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address', 'postal_code_id', name='uq_address_postalcodeid')
    )
    op.create_table('artist_links',
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('link_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['link_id'], ['links.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('artist_id', 'link_id'),
    sa.UniqueConstraint('artist_id', 'link_id', name='uq_artistid_linkid')
    )
    with op.batch_alter_table('artist_links', schema=None) as batch_op:
        batch_op.create_index('ix_artist_primary_link', ['artist_id'], unique=True, postgresql_where=sa.text('is_primary = true'))

    op.create_table('venues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(length=120), nullable=True),
    sa.Column('image_link', sa.String(length=500), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'location_id', name='uq_name_locationid')
    )
    with op.batch_alter_table('venues', schema=None) as batch_op:
        batch_op.create_index('ix_venue_name', ['name'], unique=False)

    op.create_table('shows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('artist_id', 'venue_id', 'start_time', name='uq_artistid_venueid_starttime')
    )
    with op.batch_alter_table('shows', schema=None) as batch_op:
        batch_op.create_index('ix_show_artist_id', ['artist_id'], unique=False)
        batch_op.create_index('ix_show_start_time', ['start_time'], unique=False)
        batch_op.create_index('ix_show_venue_id', ['venue_id'], unique=False)

    op.create_table('venue_links',
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('link_id', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['link_id'], ['links.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('venue_id', 'link_id'),
    sa.UniqueConstraint('venue_id', 'link_id', name='uq_venueid_linkid')
    )
    with op.batch_alter_table('venue_links', schema=None) as batch_op:
        batch_op.create_index('ix_venue_primary_link', ['venue_id'], unique=True, postgresql_where=sa.text('is_primary = true'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('venue_links', schema=None) as batch_op:
        batch_op.drop_index('ix_venue_primary_link', postgresql_where=sa.text('is_primary = true'))

    op.drop_table('venue_links')
    with op.batch_alter_table('shows', schema=None) as batch_op:
        batch_op.drop_index('ix_show_venue_id')
        batch_op.drop_index('ix_show_start_time')
        batch_op.drop_index('ix_show_artist_id')

    op.drop_table('shows')
    with op.batch_alter_table('venues', schema=None) as batch_op:
        batch_op.drop_index('ix_venue_name')

    op.drop_table('venues')
    with op.batch_alter_table('artist_links', schema=None) as batch_op:
        batch_op.drop_index('ix_artist_primary_link', postgresql_where=sa.text('is_primary = true'))

    op.drop_table('artist_links')
    op.drop_table('locations')
    op.drop_table('links')
    op.drop_table('genres_artists')
    op.drop_table('postal_codes')
    op.drop_table('link_types')
    op.drop_table('genres')
    with op.batch_alter_table('artists', schema=None) as batch_op:
        batch_op.drop_index('ix_artist_name')

    op.drop_table('artists')
    # ### end Alembic commands ###
